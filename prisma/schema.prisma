// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int                 @id @default(autoincrement())
  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt
  givenName  String
  familyName String
  name       String
  email      String              @unique
  picture    String?             @default("N/A")
  nickname   String?
  jobs       UsersOnJobs[]
  checklists UsersOnChecklists[]
}

model Job {
  id                Int           @id @default(autoincrement())
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  title             String
  company           String
  location          String
  description       String
  summary           String?
  logo              String?       @default("N/A")
  interviewExamples String?
  skills            Skill[]
  platform          String
  platformJobId     String?
  users             UsersOnJobs[]
}

model UsersOnJobs {
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  isFavorite    Boolean   @default(false)
  position      Int
  interviewDate DateTime?
  isDeleted     Boolean   @default(false)

  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  job        Job      @relation(fields: [jobId], references: [id])
  jobId      Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([userId, jobId, categoryId])
}

model Category {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String        @unique
  usersOnJobs UsersOnJobs[]
}

model UsersOnChecklists {
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  checklist   Checklist @relation(fields: [checklistId], references: [id])
  checklistId Int

  @@id([userId, checklistId])
}

model Checklist {
  id          Int                 @id @default(autoincrement())
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  description String              @db.VarChar(200)
  users       UsersOnChecklists[]
}

model Skill {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  jobs      Job[]
}
